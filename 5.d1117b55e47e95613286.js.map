{"version":3,"sources":["webpack:///./src/components/CounterRedux/index.js","webpack:///./src/store/counter/actions.js"],"names":["CounterContainer","styled","div","CounterValue","span","CounterRedux","incrementCounter","decrementCounter","counterValue","Button","onClick","data-testid","propTypes","PropTypes","number","isRequired","func","connect","counter","dispatch","type","types"],"mappings":"mKAQMA,EAAmBC,IAAOC,IAAV,qFAAGD,CAAH,sCAKhBE,EAAeF,IAAOG,KAAV,iFAAGH,CAAH,iBAIZI,EAAe,SAAC,GAAyD,IAAvDC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAC1D,OACE,kBAACR,EAAD,KACE,kBAACS,EAAA,EAAD,CACEC,QAASH,EACTI,cAAY,kCAFd,KAMA,kBAACR,EAAD,CAAcQ,cAAY,+BACvBH,GAEH,kBAACC,EAAA,EAAD,CACEC,QAASJ,EACTK,cAAY,kCAFd,OAUNN,EAAaO,UAAY,CACvBJ,aAAcK,IAAUC,OAAOC,WAC/BR,iBAAkBM,IAAUG,KAAKD,WACjCT,iBAAkBO,IAAUG,KAAKD,YAUpBE,uBAPS,SAAC,GAAD,MAAoC,CAAET,aAAtC,EAAGU,QAAWV,iBAEX,SAAAW,GAAQ,MAAK,CACtCZ,iBAAkB,kBAAMY,EC1Ca,CACrCC,KAAMC,OD0CNf,iBAAkB,kBAAMa,EC/Ca,CACrCC,KAAMC,UDiDOJ,CAA6CZ","file":"5.d1117b55e47e95613286.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { decrementCounter, incrementCounter } from 'store/counter/actions';\n\nimport Button from 'components/Button';\n\nconst CounterContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst CounterValue = styled.span`\n  margin: 8px;\n`;\n\nconst CounterRedux = ({ incrementCounter, decrementCounter, counterValue }) => {\n  return (\n    <CounterContainer>\n      <Button\n        onClick={decrementCounter}\n        data-testid=\"decrement-button-counter-hooks\"\n      >\n        -\n      </Button>\n      <CounterValue data-testid=\"counter-value-counter-hooks\">\n        {counterValue}\n      </CounterValue>\n      <Button\n        onClick={incrementCounter}\n        data-testid=\"increment-button-counter-hooks\"\n      >\n        +\n      </Button>\n    </CounterContainer>\n  );\n};\n\nCounterRedux.propTypes = {\n  counterValue: PropTypes.number.isRequired,\n  decrementCounter: PropTypes.func.isRequired,\n  incrementCounter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ counter: { counterValue } }) => ({ counterValue });\n\nconst mapDispatchToProps = dispatch => ({\n  decrementCounter: () => dispatch(decrementCounter()),\n  incrementCounter: () => dispatch(incrementCounter())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterRedux);\n","import * as types from './types';\n\nexport const incrementCounter = () => ({\n  type: types.INCREMENT_COUNTER\n});\n\nexport const decrementCounter = () => ({\n  type: types.DECREMENT_COUNTER\n});\n\nexport const resetCounter = () => ({\n  type: types.RESET_COUNTER\n});\n"],"sourceRoot":""}